///https://atcoder.jp/contests/dp/tasks/dp_f
///   ***   ---   |         ALLAHU AKBAR        |||   ---   ***   ///



#include<bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef pair<int,int> pii;
typedef pair<double, double> pdd;
typedef pair<ll, ll> pll;
typedef vector<pii> vii;
typedef vector<pll> vll;
typedef double dl;

#define endl '\n'
#define PB push_back
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define sz(x) (int)x.size()
#define nl cout<<endl
#define fr(i,a,n) for(ll i=a;i<n;i++)

const double PI = acos(-1);
const double eps = 1e-9;
const int inf = 2000000000;
const ll infLL = 9000000000000000000;
#define MOD 1000000007

#define mem(a,b) memset(a, b, sizeof(a) )
#define sqr(a) ((a) * (a))

#define bismillah ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define file() freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);


ll gcd ( ll a, ll b ) { return __gcd ( a, b ); }
ll lcm ( ll a, ll b ) { return a * ( b / gcd ( a, b ) ); }


int dx[] = { 0, 0, +1, -1, -1,  +1, -1, +1 };
int dy[] = { +1, -1, 0, 0, -1, +1, +1, -1 };
ll solve(string& s1,string& s2,ll n,ll m,vvl& dp)
{
    if(m==0 || n== 0) return 0;
    if(dp[n][m] != -1) return dp[n][m];
    if(s1[n-1] == s2[m-1])
    {
        return dp[n][m] = 1 + solve(s1,s2,n-1,m-1,dp);
    }
    else{
        return dp[n][m] = max(solve(s1,s2,n,m-1,dp),solve(s1,s2,n-1,m,dp));
    }
    return dp[n][m];
}

void raihan()
{


    string s1,s2;
    cin>>s1>>s2;
    //s1 = "abyxb",s2="axyb";
    ll n=sz(s1), m=sz(s2);
    vvl dp(n+1,vl(m+1,-1));
    //cout<<solve(s1,s2,n,m,dp);
    solve(s1,s2,n,m,dp);
    string ans="";
    ll i=n,j=m;
    while(i && j)
    {
        if(s1[i-1]==s2[j-1])
        {
            ans+= s1[i-1];
            i--,j--;
        }
        else{
            if(dp[i-1][j]>=dp[i][j-1])
            {
                i--;
            }
            else{
                j--;
            }
        }
    }
    reverse(all(ans));
    cout<<ans<<endl;


}



int main()
{
    bismillah;
    raihan();



    return 0;
}

